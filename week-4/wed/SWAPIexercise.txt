For each of the following use the SWAPI docs, to figure out the complete URL(s) (including params or queries) that 
you need to go to in order to reach the following data:

1. the height of Darth Vader

  https://swapi.dev/api/people/4

2. the population of the planet Alderaan

  https://swapi.dev/api/planets/2

3. the name of the manufacturer of the Millennium Falcon

  https://swapi.dev/api/starships/10

4. the name of the species that C-3PO belongs to (multiple URLs)

  https://swapi.dev/api/people/2
  https://swapi.dev/api/species/2/

5. the title of each film that Obi-Wan Kenobi is in (multiple URLs)

  https://swapi.dev/api/people/10/
  https://swapi.dev/api/films/1/
  https://swapi.dev/api/films/2/
  https://swapi.dev/api/films/3/
  https://swapi.dev/api/films/4/
  https://swapi.dev/api/films/5/
  https://swapi.dev/api/films/6/

6. use the search query (the how to on the search query is at the bottom of the Getting Started section of the documentation)
   to get the information about the Millennium Falcon, it’s a starship

   https://swapi.dev/api/starships/?search=mill


Part 2: Social Mountain

Summary
In this section, you’ll be looking through the documentation for the Social Mountain API and answering questions. 
You’ll also be making requests and recording the URLs and some information about the responses. Run the requests in Postman.
Note: this API is live and viewable by your classmates and staff. Keep things appropriate for class.

You can view the documentation for the Social Mountain API here

The base URL of your requests is: https://practiceapi.devmountain.com/api (make sure to have the “s” in “https”)

1. Check if the POST request accept params, queries, and/or a body. Which one(s) and what information is it expecting 
to be sent?

  POST accepts body and expects text

2. What data type does the GET request return?

  An array of objects where each object should be a post

3. What would the URL look like for deleting the post with the id 555? (This post does not exist anymore, but the syntax 
is the same for existing posts, )

  https://practiceapi.devmountain.com/api/posts/:id

4. List the possible response codes from the GET request at ‘/posts/filter’

  responses:
        200:
          description: Returns an array of filtered posts
          schema:
            $ref: '#/definitions/ApiReturn'
        409:
          description: Request query is missing required text property.

5. Create a post whose text is your name, record the URL and body here:

  https://practiceapi.devmountain.com/api/posts/
  body: {
    "text": "Ezekiel"
  }

6. What would the URL and body object be to update the post you just made to contain your faovrite color instead of your name?

  https://practiceapi.devmountain.com/api/posts?id=1415
  body: {
    "text": "Ezekiel's favorite color is blue"
  }

7. What is the URL to get posts that contain the text “blue”?

  https://practiceapi.devmountain.com/api/posts/filter?text=blue

8. Make a request to GET all the posts. What are the content type and charset of the response? (Hint: look on the Headers)

  application/json; charset=utf-8

9. What would cause a PUT request to return a 409 status?

  409: description: Request was missing req.query.id or req.body.text

10. What happens if you try to send a query in the GET request URL? Why do you get that response?

  The API returns all the expected data. Query strings are optional and so are ignored in this case.